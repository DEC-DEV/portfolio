<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	  
<mapper namespace="com.spring.bank.dao.CustomerDAO">  <!-- namespace="패키지명.인터페이스" -->

	<!-- 시큐리티 - 로그인 인증 시 호출 -->
    <!-- UserAuthenticationService -  loadUserByUsername에서 호출-->
  	<select id="selectCustomer" parameterType="String" resultType="com.spring.bank.dto.CustomerDTO">
  		SELECT * FROM member WHERE id=#{id}
  	</select>
  	
	<!-- 시큐리티 - UserLoginSuccessHandler에서 호출 -->
  	<select id="authorityChk" resultType="String">
  		SELECT authority FROM member WHERE id=#{id}
  	</select>
  	
  	<!-- 시큐리티 - pwdCheck -->
	<select id="pwdCheck" parameterType="String" resultType="String">
  		SELECT password FROM member WHERE id=#{strId}
  	</select>

  	<!-- ID 중복확인 처리 / 시큐리티에서는 회원가입여부--> <!-- resultType="Integer"일 경우 사용-->
  	<select id="idCheck" parameterType="String" resultType="Integer"> <!-- public int idCheck(String strId) {} -->
  		SELECT COUNT(*) FROM member WHERE id=#{strId} 
  		<!-- resultType="Integer"이면  COUNT(*)로 형을 맞춰줘야 한다. -->
  	</select>

  	<!-- 회원가입 처리 -->  <!-- 시큐리티 : key 컬럼 추가 -->
    <insert id="insertCustomer" parameterType="com.spring.bank.dto.CustomerDTO">
      INSERT INTO member(id, password, name, zipcode, address, address_detail, phone, email, key)
      VALUES(#{id}, #{password}, #{name}, #{zipcode}, #{address}, #{address_detail}, #{phone}, #{email}, #{key})
    </insert>  
    
    <!-- 시큐리티 -->
  	<select id="selectKey" parameterType="String" resultType="int">
  		SELECT COUNT(*) FROM member WHERE key=#{key}
  	</select>
  	
	<!-- 시큐리티 -->
  	<update id="updateGrade" parameterType="String">
		UPDATE member
		   SET enabled = 1
		 WHERE key = #{key}
  	</update>

	<!-- 회원가입 처리 -->
	<!-- 
  	<insert id="insertCustomer" parameterType="com.spring.bank.dto.CustomerDTO">
	  	INSERT INTO member(id, password, name, birthday, address, hp, email)
		VALUES(#{id},#{password}, #{name}, #{birthday}, #{address}, #{hp}, #{email})
  	</insert>
	 -->

  	<!-- 로그인 처리, 회원정보 인증(수정, 탈퇴) --><!-- Map에 추가(put)된 키명과 #{변수명}은 반드시 일치해야 한다. resultType="int"일 때 COUNT(*) -->
  	<select id="idPasswordChk" parameterType="java.util.Map" resultType="int">
  		SELECT COUNT(*) FROM member WHERE id=#{strId} AND password=#{strPassword} AND status='정상'
  	</select>

  	<!-- 회원탈퇴처리 -->
  	<update id="deleteCustomer" parameterType="String">
  		UPDATE member SET status = '탈퇴', byeDate = sysdate WHERE id=#{strId}
  	</update>
  	
	<!-- 회원정보 인증 및 상세페이지 -->
  	<select id="getCustomerDetail" parameterType="String" resultType="com.spring.bank.dto.CustomerDTO">
  		SELECT * FROM member WHERE id=#{strId}
  	</select>
  	
  	<!-- 회원정보 수정 처리 -->
  	<update id="updateCustomer" parameterType="com.spring.bank.dto.CustomerDTO"> <!--  Insert, Update Delete문에서는 resultType을 안쓰므로 생략 -->
  		UPDATE member SET password=#{password}, name=#{name}, birthday=#{birthday}, address=#{address}, hp=#{hp}, email=#{email} WHERE id=#{id}
  	</update>
  	
  	<!-- 접속 이력 등록 -->
  	<update id="update_login_history" parameterType="String">
  		update member set history = sysdate where id =#{id}
  	</update>

</mapper> 